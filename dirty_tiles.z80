
; data structures and functions for tagging which tiles need to be redrawn
; These tiles correspond to non-moving locations in the grid- needing to be
; redrawn due to the cursor passing over them, or an overlay being drawn
; over them.
; Really it's just a variable-length array of xy coords for lookup
; into the tiles data, and a loop which iterates over and draws bitmaps
; for each one (and clears the todo-list after drawing them all)

clear_dirty_tiles_list:
                ; modifies: HL
                ld hl, dirty_tiles
                ld (hl), 255 ; end marker
                ld (dirty_tiles_tail), hl
                ret

push_dirty_tile:
                ; a = (xy) tile data to push
                ; modifies: HL
                ld hl, (dirty_tiles_tail)
                ld (hl), a
                inc hl
                ld (hl), 255 ; end marker
                ld (dirty_tiles_tail), hl
                ret

dirty_tiles: defs 10*8+1 ; shouldn't need anything like this much
dirty_tiles_tail: defw 0 ; pointer to address from dirty_tails or up

redraw_dirty:
                ; step through list of dirty tile (xy) coords
                ; and erase (redraw) tile rects
                ; NB this only handles the STATIONARY tiles
                ; We will need a separate routine for drawing falling or sliding tiles
                ld hl, dirty_tiles
    @next:
                ld a, (hl)
                ; is it end marker?
                cp 255
                jr z, @+end
                inc hl
                ; a = YYYYxxxx
                ; for screen: multiply both x and y by 8 (and add GRID_X_OFFSET in x direction)
                ;             and put into de
                ; for tiles: a is (conveniently) already the low byte offset into table
                ;             so we can just put a into c (since bc is aligned to 256-bytes)
                ld c, a ; used for bc address AND ALSO used as a backup of a that we need later
                ; check : IS IT FALLING?  if so, do NOT render it now
                ld b, tiles_flags / 256
                ld a, (bc)
                bit 4, a
                jr nz, @falling_dirty ; if FALLING bit is set, treat as a blank tile for redraw

                ld a, c
                and 15
                add a, a
                add a, a
                add a, a
                add a, GRID_X_OFFSET
                ld e, a ; e = x*8+GRID_X_OFFSET
                ld a, c ; a = y
                and 240
                srl a
                ld d, a
                inc b ; point to tiles
                ld a, (bc) ; the actual tile to draw

                push hl
                call draw_tile_at_de_tile_a
                pop hl
                jr @-next
    @falling_dirty:
                ld a, c
                and 15
                add a, a
                add a, a
                add a, a
                add a, GRID_X_OFFSET
                ld e, a ; e = x*8+GRID_X_OFFSET
                ld a, c ; a = y
                and 240
                srl a
                ld d, a
                xor a
                push hl
                call draw_tile_at_de_tile_a
                pop hl
                jr @-next
    @end:
                ; FIXME - should just inline
                call clear_dirty_tiles_list
                ret

