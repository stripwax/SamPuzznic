init_draw_retry:
            ld de, 0+(RETRY_LABEL_Y_OFFSET*128)+RETRY_LABEL_X_OFFSET
            ld hl, retry_label
            ld c, 0x11 ; white
            call print_text_hl_de

            ld a, (retries_remaining)
            ld c, 2 ; color green
            ld de, 0+(RETRY_Y_OFFSET*128)+RETRY_X_OFFSET
            call fatnum_digit_a_variant_c_xy_de
            ret

init_retries:
            ld a, 2
            ld (retries_remaining), a
            ret


check_retry_request:
                ld a, (controller_retry)
                and a
                ret z

                ld a, (retries_remaining)
                and a
                ret z

                call prompt_for_retry
                ; ...
                ret


prompt_for_retry:
                ; called when the player presses the RETRY button
                ; displays something appropriate on-screen
                ; Time continues to tick!  But games is (otherwise) inactive!
                ; sets the level_clear_process accordingly:
                ; LEVEL_USE_RETRY if you used up a retry
                ; LEVEL_GAME_OVER if you ran out of retries
                ; ...
                ret


retry_label: defm "RETRY"
defb 0

retries_remaining: defb 2