; Clear scoring consists of two parts, a clear bonus and a time bonus
;
; Clear bonus:
; The bonus depends only on how many tiers of levels have been completed
; and not which level you are playing.  This is because at the start of the game
; you can begin on Level 1, Level 2, or Level 3.
;
; 1st level (i.e. level 1,2,or 3, depending which you started) : 1000 
; next level: 2000
; next level: 3000
; next level: 5000
; next level: 10000
; next level: 30000
; next level: 50000
; next level: 90000  (the maximum; only if you started on level 1 and cleared a level 8 grid)
;
; Time bonus:
; This is equal to the  number of seconds remaining on the clock multiplied by p
; Level 1 time bonus : p = 100
; Level 2 time bonus : p = 200
; Level 3 time bonus : p = 300
; Level 4 time bonus : p = 400
; Level 5 time bonus : p = 500
; Level 6 time bonus : p = 600
; Level 7 time bonus : p = 700
; Level 8 time bonus : p = 800


check_clear:
                ; if no "remaining tiles" were drawn, then there are no remaining tiles!
                ld a, (tiles_drawn_last_time)
                and a
                ret nz

                ld a, 1 ; doing anims
                ld (level_clear_process), a
                call lock_controller
                ; if we're in the middle of a bonus animation,
                ; then let those play out before doing the CLEAR animation
                ld a, (bonus_icon_frame)
                and a
                ret nz

                ; woohoo you did it
                ; kill sfx
                call sfx_kill

                ;   CLEAR !!
                ;   
                ;    BONUS
                ;    
                ;   nnnn PTS
                ;
                ;  0'36" x 100
                ;
                ;   mmmm PTS

                ld hl, message.CLEAR
                ld de, 128*CLEAR_Y_OFFSET + GRID_X_OFFSET + 4*4
                ld c, 0x11  ;  WHITE
                call print_text_hl_de

                ld b, FPS
                call wait_b

                ld hl, message.BONUS
                ld de, 128*CLEAR_Y_OFFSET + 16*128 + GRID_X_OFFSET + 5*4
                ld c, 0x99  ;  YELLOW
                call print_text_hl_de

                ld b, FPS/2
                call wait_b

                ; TODO technically this should right-aligned not left-aligned so we
                ; (aligning on the PTS, where the S should be under the last ! of "CLEAR !!")
                ; need to do some rejigging based on the length of the score string
                ld hl, message.FAKE_CLEAR_BONUS_POINTS
                ld de, 128*CLEAR_Y_OFFSET + 32*128 + GRID_X_OFFSET + 4*4
                ld c, 0x99  ;  YELLOW
                call print_text_hl_de

                ld b, FPS/2
                call wait_b

                ; TODO same right-alignment required here.
                ld hl, message.FAKE_TIME_BONUS_POINTS
                ld de, 128*CLEAR_Y_OFFSET + 48*128 + GRID_X_OFFSET + 3*4
                ld c, 0x11  ;  WHITE
                call print_text_hl_de

                ld b, FPS/2
                call wait_b

                ld hl, message.FAKE_TOTAL_BONUS_POINTS
                ld de, 128*CLEAR_Y_OFFSET + 64*128 + GRID_X_OFFSET + 4*4
                ld c, 0x99  ;  YELLOW
                call print_text_hl_de

                ld b, FPS*4
                call wait_b

                ld a, 2 ; done - onto the next level!
                ld (level_clear_process), a

                ret

check_sorry_cant_clear:
                ; called when you have an unmatchable number of tiles remaining (e.g. if you have only 1 tile of a certain kind)
                ; It does not cover everything - inaccessible unmatcheable pieces are not detected - only (it seems)
                ; the case where you have a tile with a remaining count of 1.
                ; Note that this only "does something" if you have no retries remaining
                ; If you have any retries remaining, nothing happens here
                ; - it seems to be assumed you'll just use one of your retries without needing a friendly nudge.
                ; (Of course, it's an arcade machine, so that means you're more likely to run out of time and insert another coin)
                ; TODO probably we should set something when doing tile redraw i.e. "there's an unmatchable tile count"
                ret

message.CLEAR: defm "CLEAR !!"
defb 0
message.BONUS: defm "BONUS"
defb 0
message.FAKE_CLEAR_BONUS_POINTS: defm "50000 PTS"
defb 0
message.FAKE_TIME_BONUS_POINTS: defm "0'00"" * 800"
defb 0
message.FAKE_TOTAL_BONUS_POINTS: defm "124000 PTS"
defb 0